syntax = "proto3";

package QuantumMessage;

message QubitMessage {
	int32 position = 1;
	int32 vectorIndex = 2;
	MatrixMessage m = 3;
	repeated StateVectorOperationMessage history = 4;
	int32 pid = 5;
	int32 callbackPort = 6;
}

message MatrixMessage {
	int32 rows = 1;
	int32 cols = 2;
	repeated ComplexMessage t = 3; 
}

message ComplexMessage {
	float real = 1;
	float imaginary = 2;
}

message MeasurementMessage {
	int32 position = 1;
	int32 vectorIndex = 2;
	int32 pid = 3;
	int32 result = 4;
	int32 callbackPort = 6;
}

message StateVectorOperationMessage {
	MatrixMessage operation = 1;
	repeated int32 arguments = 2;
	int32 callbackPort = 6;
}

message VoidMessage {
}

message RemoteIndexMessage {
	int32 remoteindex = 1;
	int32 remotepid = 2;
}

message ClassicMessage {
	string thedata = 1;
	int32 callbackPort = 6;
}

service QuantumChannel {
	rpc SendMatrix(MatrixMessage) returns (VoidMessage) {}
	rpc SendQubit(QubitMessage) returns (RemoteIndexMessage) {}
	rpc SendClassicData(ClassicMessage) returns (VoidMessage) {}
	rpc SendMeasurementMessage(MeasurementMessage) returns (VoidMessage) {}
}
